generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  password  String
  createdAt DateTime   @default(now())
  documents Document[]

  @@map("users")
}

model Document {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  key           String
  mimeType      String
  status        DocumentStatus @default(PENDING)
  transcription Transcription?
  processedAt   DateTime?
  createdAt     DateTime       @default(now())

  @@map("documents")
}

model Transcription {
  id            String         @id @default(uuid())
  document      Document       @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId    String         @unique
  text          String         @db.Text
  createdAt     DateTime       @default(now())
  aiCompletions AiCompletion[]

  @@map("transcriptions")
}

model AiCompletion {
  id              String        @id @default(uuid())
  transcription   Transcription @relation(fields: [transcriptionId], references: [id], onDelete: Cascade)
  transcriptionId String
  prompt          String        @db.Text
  response        String        @db.Text
  tokensUsed      Int?
  createdAt       DateTime      @default(now())

  @@map("aiCompletions")
}

enum DocumentStatus {
  PENDING
  PROCESSING
  DONE
  FAILED
}
